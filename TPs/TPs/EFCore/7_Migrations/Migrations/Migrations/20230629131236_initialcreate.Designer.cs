// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migrations.Modele;

#nullable disable

namespace Migrations.Migrations
{
    [DbContext(typeof(VoyagesDbContext))]
    [Migration("20230629131236_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("French_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Migrations.Modele.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieId"), 1L, 1);

                    b.Property<string>("LibelleCategorie")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategorieId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Migrations.Modele.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("Adresse")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Civilite")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CodePostal")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Migrations.Modele.Croisiere", b =>
                {
                    b.Property<string>("CodeVoyage")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("NbrJours")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixJour")
                        .HasColumnType("money");

                    b.HasKey("CodeVoyage")
                        .HasName("PK_Croisieres_");

                    b.ToTable("Croisieres");
                });

            modelBuilder.Entity("Migrations.Modele.ModesReservation", b =>
                {
                    b.Property<int>("ModeReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModeReservationId"), 1L, 1);

                    b.Property<string>("LibelleModeReservation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ModeReservationId");

                    b.ToTable("ModesReservations");
                });

            modelBuilder.Entity("Migrations.Modele.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CodeVoyage")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("datetime");

                    b.Property<int>("ModeReservation")
                        .HasColumnType("int");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("money");

                    b.Property<short>("Qte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ReservationId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CodeVoyage");

                    b.HasIndex("ModeReservation");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Migrations.Modele.Voyage", b =>
                {
                    b.Property<string>("CodeVoyage")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("money");

                    b.Property<bool>("Promotion")
                        .HasColumnType("bit");

                    b.HasKey("CodeVoyage");

                    b.HasIndex("CategorieId");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("Migrations.Modele.Croisiere", b =>
                {
                    b.HasOne("Migrations.Modele.Voyage", "CodeVoyageNavigation")
                        .WithOne("Croisiere")
                        .HasForeignKey("Migrations.Modele.Croisiere", "CodeVoyage")
                        .IsRequired()
                        .HasConstraintName("FK_Croisieres_Voyages");

                    b.Navigation("CodeVoyageNavigation");
                });

            modelBuilder.Entity("Migrations.Modele.Reservation", b =>
                {
                    b.HasOne("Migrations.Modele.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_Clients");

                    b.HasOne("Migrations.Modele.Voyage", "CodeVoyageNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("CodeVoyage")
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_Voyages");

                    b.HasOne("Migrations.Modele.ModesReservation", "ModeReservationNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("ModeReservation")
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_ModesReservations");

                    b.Navigation("Client");

                    b.Navigation("CodeVoyageNavigation");

                    b.Navigation("ModeReservationNavigation");
                });

            modelBuilder.Entity("Migrations.Modele.Voyage", b =>
                {
                    b.HasOne("Migrations.Modele.Categorie", "Categorie")
                        .WithMany("Voyages")
                        .HasForeignKey("CategorieId")
                        .IsRequired()
                        .HasConstraintName("FK_Voyages_Categories");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Migrations.Modele.Categorie", b =>
                {
                    b.Navigation("Voyages");
                });

            modelBuilder.Entity("Migrations.Modele.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Migrations.Modele.ModesReservation", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("Migrations.Modele.Voyage", b =>
                {
                    b.Navigation("Croisiere")
                        .IsRequired();

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
