// <auto-generated />
using System;
using InitBase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InitBase.Migrations
{
    [DbContext(typeof(ArticlesDbContext))]
    [Migration("20230629093419_promotion2")]
    partial class promotion2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InitBase.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"), 1L, 1);

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CategorieId");

                    b.ToTable("Articles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Article");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            CategorieId = 1,
                            Description = "L'Australie fascinante avec Sydney et son célèbre opéra ...",
                            Designation = "Australie",
                            Prix = 3000m
                        },
                        new
                        {
                            ArticleId = 2,
                            CategorieId = 2,
                            Description = "Au carrefour des civilisations, l'Egypte  ...",
                            Designation = "Egypte",
                            Prix = 2000m
                        },
                        new
                        {
                            ArticleId = 3,
                            CategorieId = 2,
                            Description = "Une véritable immersion en plein cœur de la vaste savane ...",
                            Designation = "Kenya",
                            Prix = 1450m
                        });
                });

            modelBuilder.Entity("InitBase.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieId"), 1L, 1);

                    b.Property<string>("LibelleCategorie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategorieId = 1,
                            LibelleCategorie = "Croisière"
                        },
                        new
                        {
                            CategorieId = 2,
                            LibelleCategorie = "Trekking"
                        });
                });

            modelBuilder.Entity("InitBase.Promotion", b =>
                {
                    b.HasBaseType("InitBase.Article");

                    b.Property<DateTime>("debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fin")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Promotion");

                    b.HasData(
                        new
                        {
                            ArticleId = 4,
                            CategorieId = 2,
                            Description = "Une véritable immersion en plein cœur de la vaste savane ...",
                            Designation = "Kenya PROMO",
                            Prix = 1450m,
                            debut = new DateTime(2023, 6, 29, 10, 34, 18, 807, DateTimeKind.Local).AddTicks(63),
                            fin = new DateTime(2023, 7, 29, 10, 34, 18, 807, DateTimeKind.Local).AddTicks(73)
                        });
                });

            modelBuilder.Entity("InitBase.Article", b =>
                {
                    b.HasOne("InitBase.Categorie", "Categorie")
                        .WithMany("Articles")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("InitBase.Categorie", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
